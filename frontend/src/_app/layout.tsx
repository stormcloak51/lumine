import { createTheme, MantineColorsTuple, MantineProvider } from '@mantine/core'
import '@mantine/core/styles.css'
import { Notifications } from '@mantine/notifications'
import '@mantine/notifications/styles.css'
import type { Metadata } from 'next'
import * as font from '../public/assets/fonts/fonts'
import ClientProvider from './ClientProvider'
import './globals.css'

export const metadata: Metadata = {
	title: 'lumine',
	description: 'Generated by create next app',
}

const myColor: MantineColorsTuple = [
	'#ffd37d',
	'#fff8e1',
	'#ffefcb',
	'#ffdd9a',
	'#ffcb64',
	'#ffbb38',
	'#ffb11b',
	'#ffac09',
	'#e39600',
	'#ca8500',
	'#b07200',
]

const theme = createTheme({
	colors: {
		myColor,
	},
})

export async function RootLayout({
	children,
}: Readonly<{
	children: React.ReactNode
}>) {
	return (
		<html lang='en'>
			<head>{/* <ColorSchemeScript /> */}</head>
			<body
				className={`${font.geistSans.variable} ${font.geistMono.variable} ${font.helvetica_bold.variable} ${font.helvetica_regular.variable} antialiased`}
			>
				<ClientProvider>
					<MantineProvider defaultColorScheme='dark' theme={theme}>
						<Notifications
							zIndex={2000}
							styles={{
								root: {
									position: 'fixed',
									pointerEvents: 'none',
									zIndex: 2000,
								},
								notification: {
									pointerEvents: 'auto',
								},
							}}
						/>
						{children}
					</MantineProvider>
				</ClientProvider>
			</body>
		</html>
	)
}
